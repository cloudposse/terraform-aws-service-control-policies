- sid: "DenyEc2PublicAMI"
  effect: "Deny"
  actions:
    - "ec2:RunInstances"
  condition:
    - test: "Bool"
      variable: "ec2:Public"
      values:
        - true
  resources:
    - "arn:aws:ec2:*::image/*"

- sid: "DenyEc2PublicIp"
  effect: "Deny"
  actions:
    - "ec2:RunInstances"
  condition:
    - test: "Bool"
      variable: "ec2:AssociatePublicIpAddress"
      values:
        - true
  resources:
    - "arn:aws:ec2:*:*:network-interface/*"

- sid: "RequireEc2AMIResourceTag"
  effect: "Deny"
  actions:
    - "ec2:RunInstances"
  condition:
    - test: "StringNotEqualsIgnoreCase"
      variable: "ec2:ResourceTag/${ami_tag_key}"
      values:
        - "${ami_tag_value}"
  resources:
    - "arn:aws:ec2:*::image/ami-*"

- sid: "RequireEc2IMDSv2"
  effect: "Deny"
  actions:
    - "ec2:RunInstances"
  condition:
    - test: "StringNotEquals"
      variable: "ec2:MetadataHttpTokens"
      values:
        - "required"
  resources:
    - "arn:aws:ec2:*:*:instance/*"

- sid: "RequireEc2MFAEC2"
  effect: "Deny"
  actions:
    - "ec2:StopInstances"
    - "ec2:TerminateInstances"
    - "ec2:SendDiagnosticInterrupt"
  condition:
    - test: "BoolIfExists"
      variable: "aws:MultiFactorAuthPresent"
      values:
        - false
  resources:
    - "*"

- sid: "RestrictEc2AMI"
  effect: "Deny"
  actions:
    - "ec2:RunInstances"
  condition:
    - test: "StringNotEquals"
      variable: "ec2:Owner"
      values:
        - "${ami_creator_account}"
  resources:
    - "arn:aws:ec2:*::image/ami-*"
